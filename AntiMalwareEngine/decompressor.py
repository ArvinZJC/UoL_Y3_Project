'''
@Description: a decompressor
@Version: 1.1.5.20200330
@Author: Robin Nix and Jian Zhang
@Date: 2020-02-20 20:51:04
@Last Editors: Jichen Zhao
@LastEditTime: 2020-03-30 19:51:48
'''

import numpy as np


def decompress(feature_vector, dimension_count):
    '''
    Decompress features to one-hot form.

    Parameters
    ----------
    feature_vector : features to be decompressed

    dimension_count : the number of dimensions

    Returns
    -------
    one_hot_form : the one-hot representation where each feature is encoded using a one-hot vector
    '''

    one_hot_vector_list = [] # a list of one-hot vectors for converting to the one-hot representation
    
    for feature in feature_vector:
        # to get a one-hot vector for each feature, set a specified element to 1 and leave the others to 0
        feature_squeezed = np.squeeze(feature)
        one_hot_vector = np.zeros((feature_squeezed.shape[0], feature_squeezed.shape[1], dimension_count))
        one_hot_vector[np.arange(feature_squeezed.shape[0]).reshape(feature_squeezed.shape[0], 1),
            np.tile(np.arange(feature_squeezed.shape[1]), (feature_squeezed.shape[0], 1)),
            feature_squeezed] = 1
        
        one_hot_vector_list.append(one_hot_vector)

    return np.expand_dims(np.vstack(one_hot_vector_list), 3)


# test purposes only
if __name__ == '__main__':
    import os
    
    from logger import Logger

    data = np.arange(12).reshape(2, 2, 3, 1)
    Logger(os.path.basename(__file__), __name__).i('Shape of the one-hot form: ' + str(decompress(data, 12).shape)) # initialise a logger and add a message with the level INFO